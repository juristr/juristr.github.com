<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nextjs on juri.dev</title>
    <link>https://juristr.com/tags/nextjs/</link>
    <description>Recent content in Nextjs on juri.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Juri Strumpflohner - All rights reserved</copyright>
    <lastBuildDate>Wed, 23 Jun 2021 08:40:00 +0100</lastBuildDate>
    
	<atom:link href="https://juristr.com/tags/nextjs/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Read and render MD files with Next.js and Nx</title>
      <link>https://juristr.com/blog/2021/06/read-render-markdown-nextjs-and-nx/</link>
      <pubDate>Wed, 23 Jun 2021 08:40:00 +0100</pubDate>
      
      <guid>https://juristr.com/blog/2021/06/read-render-markdown-nextjs-and-nx/</guid>
      <description>&lt;div class=&#34;article-intro&#34;&gt;
    In the previous article, we looked into how to setup &lt;a href=&#34;https://juristr.com/blog/2021/06/setup-tailwind-nextjs-and-nx&#34;&gt;Tailwind with Next.js and Nx workspace&lt;/a&gt;.
In this article we are going to learn how to use Next.js to read files from the file system, to parse the Markdown, and to render it to HTML. In particular, we&amp;rsquo;re going to see how Nx helps us generate code and organize the features into Nx libraries. Rendering Markdown files is an essential part of creating a JAMStack application. For our blog platform, we are going to write articles in Markdown, which should then be parsed and rendered properly.
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Setup Next.js to use Tailwind with Nx</title>
      <link>https://juristr.com/blog/2021/06/setup-tailwind-nextjs-and-nx/</link>
      <pubDate>Tue, 15 Jun 2021 08:40:00 +0100</pubDate>
      
      <guid>https://juristr.com/blog/2021/06/setup-tailwind-nextjs-and-nx/</guid>
      <description>&lt;div class=&#34;article-intro&#34;&gt;
    In the &lt;a href=&#34;https://juristr.com/blog/2021/06/create-nextjs-webapp-nx&#34;&gt;previous article&lt;/a&gt; we learned how to setup Next.js in an Nx workspace. In this article we carry that forward, by adding &lt;a href=&#34;https://tailwindcss.com/&#34;&gt;TailwindCSS&lt;/a&gt; support to our setup.
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Create a Next.js web app with Nx</title>
      <link>https://juristr.com/blog/2021/06/create-nextjs-webapp-nx/</link>
      <pubDate>Wed, 09 Jun 2021 08:40:00 +0100</pubDate>
      
      <guid>https://juristr.com/blog/2021/06/create-nextjs-webapp-nx/</guid>
      <description>&lt;div class=&#34;article-intro&#34;&gt;
    In this article, we&amp;rsquo;re going to explore how to create our very first web application with Next.js and Nx. We&amp;rsquo;re going to learn about the anatomy of a Nx based workspace, how to generate one, and specifically how to setup our Next.js application. Finally, we&amp;rsquo;re also going to create our blog&amp;rsquo;s about page and learn about some handy Next.js features.
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>