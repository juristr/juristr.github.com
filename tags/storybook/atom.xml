<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Storybook on juri.dev</title>
    <link>https://juristr.com/tags/storybook/</link>
    <description>Recent content in Storybook on juri.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Juri Strumpflohner - All rights reserved</copyright>
    <lastBuildDate>Thu, 12 Aug 2021 07:40:00 +0100</lastBuildDate>
    
	<atom:link href="https://juristr.com/tags/storybook/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use Storybook with Tailwind in an Nx Workspace</title>
      <link>https://juristr.com/blog/2021/08/nextjs-storybook-tailwind-nx/</link>
      <pubDate>Thu, 12 Aug 2021 07:40:00 +0100</pubDate>
      
      <guid>https://juristr.com/blog/2021/08/nextjs-storybook-tailwind-nx/</guid>
      <description>&lt;div class=&#34;article-intro&#34;&gt;
    In the &lt;a href=&#34;https://juristr.com/blog/2021/07/nextjs-workspace-generator-blog-draft/&#34;&gt;previous article&lt;/a&gt;, we talked about Nx workspace generators and how they can help be more efficient in automating repetitive tasks. In this article, we&amp;rsquo;re going to leverage Nx&amp;rsquo;s excellent support for Storybook to develop our components in isolation before using them in our Next.js app.
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>