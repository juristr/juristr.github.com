<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Next on juri.dev</title>
    <link>https://juristr.com/categories/next/</link>
    <description>Recent content in Next on juri.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Juri Strumpflohner - All rights reserved</copyright>
    <lastBuildDate>Thu, 12 Aug 2021 07:40:00 +0100</lastBuildDate>
    
	<atom:link href="https://juristr.com/categories/next/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use Storybook with Tailwind in an Nx Workspace</title>
      <link>https://juristr.com/blog/2021/08/nextjs-storybook-tailwind-nx/</link>
      <pubDate>Thu, 12 Aug 2021 07:40:00 +0100</pubDate>
      
      <guid>https://juristr.com/blog/2021/08/nextjs-storybook-tailwind-nx/</guid>
      <description>&lt;div class=&#34;article-intro&#34;&gt;
    In the &lt;a href=&#34;https://juristr.com/blog/2021/07/nextjs-workspace-generator-blog-draft/&#34;&gt;previous article&lt;/a&gt;, we talked about Nx workspace generators and how they can help be more efficient in automating repetitive tasks. In this article, we&amp;rsquo;re going to leverage Nx&amp;rsquo;s excellent support for Storybook to develop our components in isolation before using them in our Next.js app.
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Using Nx Workspace generators to scaffold new blog posts</title>
      <link>https://juristr.com/blog/2021/07/nextjs-workspace-generator-blog-draft/</link>
      <pubDate>Wed, 28 Jul 2021 08:40:00 +0100</pubDate>
      
      <guid>https://juristr.com/blog/2021/07/nextjs-workspace-generator-blog-draft/</guid>
      <description>&lt;div class=&#34;article-intro&#34;&gt;
    In the &lt;a href=&#34;https://juristr.com/blog/2021/07/fast-refresh-mdx-files-next-and-nx/&#34;&gt;previous article&lt;/a&gt; we talked about how to leverage Nx capabilities to create a custom Next server that allows us to perform a fast refresh not only when our React components change, but also whenever we change something in our MDX files. This is especially interesting as we&amp;rsquo;re writing a new article and want to see the changes live immediately in our browser. This week we&amp;rsquo;ll continue by looking at how to leverage Nx Workspace generators to scaffold new blog drafts.
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Hot Reload MDX changes in Next.js and Nx</title>
      <link>https://juristr.com/blog/2021/07/fast-refresh-mdx-files-next-and-nx/</link>
      <pubDate>Thu, 15 Jul 2021 08:40:00 +0100</pubDate>
      
      <guid>https://juristr.com/blog/2021/07/fast-refresh-mdx-files-next-and-nx/</guid>
      <description>&lt;div class=&#34;article-intro&#34;&gt;
    In the &lt;a href=&#34;https://juristr.com/blog/2021/07/component-hydration-nextjs-nx/&#34;&gt;previous article&lt;/a&gt; we learned how to use &lt;code&gt;next-mdx-remote&lt;/code&gt; to load and hydrate MDX content. In this article, we&amp;rsquo;re going to learn how to implement a custom server for our Next.js app with Nx, that allows us to auto-refresh the rendering whenever something in our MDX files changes.
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Component hydration with MDX in Next.js and Nx</title>
      <link>https://juristr.com/blog/2021/07/component-hydration-nextjs-nx/</link>
      <pubDate>Thu, 08 Jul 2021 08:40:00 +0100</pubDate>
      
      <guid>https://juristr.com/blog/2021/07/component-hydration-nextjs-nx/</guid>
      <description>&lt;div class=&#34;article-intro&#34;&gt;
    In the &lt;a href=&#34;https://juristr.com/blog/2021/06/read-render-markdown-nextjs-and-nx/&#34;&gt;previous article&lt;/a&gt;, we explored how to render Markdown with Next.js as well as how Nx can help by moving the markdown-related processing logic into its own library. In this article, we&amp;rsquo;re going to explore how to dynamically hydrate React components with MDX and Next.js.
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Read and render MD files with Next.js and Nx</title>
      <link>https://juristr.com/blog/2021/06/read-render-markdown-nextjs-and-nx/</link>
      <pubDate>Wed, 23 Jun 2021 08:40:00 +0100</pubDate>
      
      <guid>https://juristr.com/blog/2021/06/read-render-markdown-nextjs-and-nx/</guid>
      <description>&lt;div class=&#34;article-intro&#34;&gt;
    In the previous article, we looked into how to setup &lt;a href=&#34;https://juristr.com/blog/2021/06/setup-tailwind-nextjs-and-nx&#34;&gt;Tailwind with Next.js and Nx workspace&lt;/a&gt;.
In this article we are going to learn how to use Next.js to read files from the file system, to parse the Markdown, and to render it to HTML. In particular, we&amp;rsquo;re going to see how Nx helps us generate code and organize the features into Nx libraries. Rendering Markdown files is an essential part of creating a JAMStack application. For our blog platform, we are going to write articles in Markdown, which should then be parsed and rendered properly.
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Setup Next.js to use Tailwind with Nx</title>
      <link>https://juristr.com/blog/2021/06/setup-tailwind-nextjs-and-nx/</link>
      <pubDate>Tue, 15 Jun 2021 08:40:00 +0100</pubDate>
      
      <guid>https://juristr.com/blog/2021/06/setup-tailwind-nextjs-and-nx/</guid>
      <description>&lt;div class=&#34;article-intro&#34;&gt;
    In the &lt;a href=&#34;https://juristr.com/blog/2021/06/create-nextjs-webapp-nx&#34;&gt;previous article&lt;/a&gt; we learned how to setup Next.js in an Nx workspace. In this article we carry that forward, by adding &lt;a href=&#34;https://tailwindcss.com/&#34;&gt;TailwindCSS&lt;/a&gt; support to our setup.
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Create a Next.js web app with Nx</title>
      <link>https://juristr.com/blog/2021/06/create-nextjs-webapp-nx/</link>
      <pubDate>Wed, 09 Jun 2021 08:40:00 +0100</pubDate>
      
      <guid>https://juristr.com/blog/2021/06/create-nextjs-webapp-nx/</guid>
      <description>&lt;div class=&#34;article-intro&#34;&gt;
    In this article, we&amp;rsquo;re going to explore how to create our very first web application with Next.js and Nx. We&amp;rsquo;re going to learn about the anatomy of a Nx based workspace, how to generate one, and specifically how to setup our Next.js application. Finally, we&amp;rsquo;re also going to create our blog&amp;rsquo;s about page and learn about some handy Next.js features.
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>